{"version":3,"sources":["components/nerdman/nerd-man.svg","serviceWorker.ts","use-batmobil.ts","components/nerdman/nerd-man.tsx","routes/remote-control/hint.tsx","routes/remote-control/promise-queue.ts","routes/remote-control/remote-control-route.tsx","use-motion.ts","use-interval.ts","components/comic-box/comic-box.tsx","use-media-query.ts","routes/home/home.tsx","routes/about/about.tsx","index.tsx","app.tsx"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","BatMobileBLE","NerdMan","onClick","shadowFill","props","noop","useEffect","document","addEventListener","onPointerUp","removeEventListener","viewBox","style","margin","id","stdDeviation","filter","xlinkHref","NerdManSvgPath","fill","transition","cursor","onPointerDown","Hint","children","divRef","useRef","useState","showElement","setShowElement","current","ref","className","RemoteControl","btGattChar","connected","setConnected","connect","a","async","request","filters","services","HUB_UUID","optionalServices","bluetooth","requestDevice","device","gatt","server","getPrimaryService","service","getCharacteristic","CHARACTERISTIC_UUID","x","writeData","port","speed","speedInt","Number","toFixed","data","Int8Array","of","writeValue","warn","useMemo","setSpeedLeft","setSpeedRight","useBatMobile","isPressed","setIsPressed","y","z","setState","timerId","applyOrientation","accelerationIncludingGravity","setTimeout","prev","useMotion","queue","tail","task","finally","promiseQueue","scaleLeft","scaleLinear","domain","range","clamp","scaleRight","callback","delay","savedCallback","setInterval","clearInterval","useInterval","ComicBox","BreakPoints","HomeLink","to","color","Home","iconWidth","queries","values","defaultValue","mediaQueryLists","map","q","matchMedia","getValue","useCallback","index","findIndex","mql","matches","value","setValue","handler","forEach","addListener","removeListener","useMedia","width","display","justifyContent","About","ReactDOM","render","path","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ce9f5ab8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nerd-man.9eebd8ec.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { useState, useRef, useMemo } from \"react\";\n\nenum BatMobileBLE {\n  HUB_UUID = \"00001623-1212-efde-1623-785feabcd123\",\n  CHARACTERISTIC_UUID = \"00001624-1212-efde-1623-785feabcd123\"\n}\n\nexport const useBatMobile = () => {\n  const btGattChar = useRef<\n    BluetoothRemoteGATTCharacteristic | null | undefined\n  >(null);\n  const [connected, setConnected] = useState(false);\n\n  async function connect() {\n    const request: RequestDeviceOptions = {\n      filters: [\n        {\n          services: [BatMobileBLE.HUB_UUID]\n        }\n      ],\n      optionalServices: [\"battery_service\", \"device_information\"]\n    };\n    return navigator.bluetooth\n      .requestDevice(request)\n      .then(device => device.gatt?.connect())\n      .then(server => server?.getPrimaryService(BatMobileBLE.HUB_UUID))\n      .then(service =>\n        service?.getCharacteristic(BatMobileBLE.CHARACTERISTIC_UUID)\n      )\n      .then(x => {\n        btGattChar.current = x; // saving the ref\n        setConnected(true);\n      });\n  }\n\n  async function writeData(port: number, speed: number) {\n    const speedInt = Number(speed.toFixed(0));\n    console.log(`Speed ${speed} (${speedInt}) at ${port}`);\n    const data = Int8Array.of(\n      0x08, // https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#output-sub-command-startspeed-speed1-speed2-maxpower-useprofile-0x08\n      0x00,\n      0x81,\n      port, // The motor ?!\n      0x11,\n      0x51,\n      0x00,\n      speedInt // 75 -> speed set to\n    );\n    if (btGattChar.current) {\n      await btGattChar.current.writeValue(data);\n      console.log(\"wrote data\", data);\n    } else {\n      console.warn(\"No yet connected to write\");\n    }\n  }\n\n  return useMemo(\n    () => ({\n      connect,\n      connected: connected,\n      async setSpeedLeft(speed: number) {\n        await writeData(1, speed);\n      },\n      async setSpeedRight(speed: number) {\n        await writeData(0, speed);\n      }\n    }),\n    [connected]\n  );\n};\n","import React, { FC, useEffect } from \"react\";\nimport NerdManSvgPath from \"./nerd-man.svg\";\n\nexport interface NerdManProps {\n  onClick?: () => void;\n  shadowFill?: string;\n  onPointerUp?: () => void;\n  onPointerDown?: () => void;\n}\n\nexport const NerdMan: FC<NerdManProps> = ({\n  onClick,\n  shadowFill = \"red\",\n  ...props\n}) => {\n  function noop() {}\n  useEffect(() => {\n    document.addEventListener(\"pointerup\", props.onPointerUp ?? noop);\n    return () => document.removeEventListener(\"pointerup\", props.onPointerUp ?? noop);\n  }, [props.onPointerUp]);\n  return (\n    <svg viewBox=\"0 0 812 375\" style={{ margin: \"2rem\" }}>\n      <defs>\n        <filter id=\"Blur\">\n          <feGaussianBlur stdDeviation=\"12\" />\n        </filter>\n      </defs>\n      <use\n        filter=\"url(#Blur)\"\n        xlinkHref={NerdManSvgPath + \"#Bat\"}\n        style={{\n          fill: shadowFill,\n          transition: \"fill .35s ease-in\"\n        }}\n      />\n      <use\n        xlinkHref={NerdManSvgPath + \"#Bat\"}\n        style={{ cursor: \"pointer\" }}\n        onClick={onClick}\n        onPointerDown={props.onPointerDown}\n        onPointerUp={props.onPointerUp}\n      />\n      <use\n        xlinkHref={NerdManSvgPath + \"#Glasses\"}\n        style={{\n          fill: \"red\"\n        }}\n      ></use>\n    </svg>\n  );\n};\n","import React, { FC, useRef, useState, useEffect } from \"react\";\n\nexport const Hint: FC<any> = ({ children }) => {\n  const divRef = useRef<HTMLDivElement>(null);\n  const [showElement, setShowElement] = useState(true);\n\n  useEffect(() => {\n    divRef.current?.addEventListener(\"animationend\", () => {\n      setShowElement(false);\n    });\n  }, []);\n\n  return showElement ? (\n    <div ref={divRef} className={\"hint-text\"}>\n      {children}\n    </div>\n  ) : null;\n};\n","export const promiseQueue = () => {\n  let tail: Promise<any> | null = null;\n  return (task: () => Promise<any>) => {\n    tail = tail?.finally(task) ?? task();\n  };\n};\n","import React, { useState } from \"react\";\nimport { NerdMan } from \"../../components/nerdman/nerd-man\";\nimport { Hint } from \"./hint\";\nimport { useBatMobile } from \"../../use-batmobil\";\nimport { useMotion } from \"../../use-motion\";\nimport { scaleLinear } from \"d3-scale\";\nimport { useInterval } from \"../../use-interval\";\nimport { promiseQueue } from \"./promise-queue\";\n\nexport const RemoteControl: React.FC = () => {\n  const { connect, connected, setSpeedLeft, setSpeedRight } = useBatMobile();\n  const [isPressed, setIsPressed] = useState(false);\n  const { y } = useMotion();\n  const queue = promiseQueue();\n\n  const scaleLeft = scaleLinear()\n    .domain([10, 0, -10])\n    .range([-126, -126, 0])\n    .clamp(true);\n  const scaleRight = scaleLinear()\n    .domain([10, 0, -10])\n    .range([0, 126, 126])\n    .clamp(true);\n\n  async function handleNerdManClick() {\n    if (!connected) {\n      await connect();\n    }\n  }\n\n  async function drive() {\n    if (connected) {\n      console.log(\"driving: \" + y);\n      queue(() => setSpeedLeft(scaleLeft(y ?? 0)));\n      queue(() => setSpeedRight(scaleRight(y ?? 0)));\n    }\n  }\n\n  async function handlePointerUp() {\n    queue(() => setSpeedLeft(127));\n    queue(() => setSpeedRight(127));\n    setIsPressed(false);\n  }\n\n  useInterval(drive, isPressed ? 250 : null);\n  return (\n    <div className=\"App\">\n      <Hint>\n        <strong>Tap to Connect</strong>\n      </Hint>\n      {/*\n      <div style={{ color: \"white\", display: \"flex\", flexDirection: \"row\" }}>\n        <span>{isPressed ? \"pressed\" : \"not pressed\"}</span>\n        <span>{scaleLeft(y ?? 0).toFixed(0)} </span>\n        <input readOnly type=\"range\" min={-10} max={10} value={(y ?? 0) * -1} />\n        <span>{scaleRight(y ?? 0).toFixed(0)}</span>\n      </div>\n       */}\n      <NerdMan\n        onPointerDown={() => setIsPressed(true)}\n        onPointerUp={handlePointerUp}\n        onClick={handleNerdManClick}\n        shadowFill={connected ? \"green\" : \"red\"}\n      />\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\n\nexport function useMotion() {\n  const [state, setState] = useState<DeviceMotionEventAcceleration>({\n    x: 0,\n    y: 0,\n    z: 0\n  });\n  useEffect(() => {\n    let timerId: ReturnType<typeof setTimeout> | null;\n    function applyOrientation({\n      accelerationIncludingGravity,\n    }: DeviceMotionEvent) {\n      if(timerId){\n        return;\n      }\n      timerId = setTimeout(() => {\n        setState(prev => accelerationIncludingGravity ?? prev);\n        timerId = null;\n      }, 100)\n    }\n    window.addEventListener(\"devicemotion\", applyOrientation);\n    return () => window.removeEventListener(\"devicemotion\", applyOrientation);\n  }, []);\n\n  return state;\n}\n","import { useRef, useEffect } from \"react\";\n\nexport function useInterval(callback: () => void, delay: number | null) {\n  const savedCallback = useRef(callback);\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback?.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import \"./styles.css\";\nimport { FC } from \"react\";\nimport React from \"react\";\n\nexport const ComicBox: FC<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>> = (props) => {\n  return (\n    <div className=\"box box1\">\n      <div className=\"oddboxinner\">\n          <div {...props}></div>\n      </div>\n    </div>\n  );\n};\n","import { useState, useEffect, useCallback, useMemo } from \"react\";\n\nexport const BreakPoints = {\n  SM: \" (min-width: 640px) \",\n  MD: \"(min-width: 768px)\",\n  LG: \" (min-width: 1024px)\",\n  XL: \"(min-width: 1280px)\"\n};\n\nexport function useMedia<T>(queries: string[], values: T[], defaultValue: T) {\n  // Array containing a media query list for each query\n  const mediaQueryLists = useMemo(\n    () => queries.map(q => window.matchMedia(q)),\n    [queries]\n  );\n\n  // Function that gets value based on matching media query\n  const getValue = useCallback(() => {\n    // Get index of first media query that matches\n    const index = mediaQueryLists.findIndex(mql => mql.matches);\n    // Return related value or defaultValue if none\n    return typeof values[index] !== \"undefined\" ? values[index] : defaultValue;\n  }, [mediaQueryLists, values, defaultValue]);\n\n  // State and setter for matched value\n  const [value, setValue] = useState(getValue);\n\n  useEffect(\n    () => {\n      // Event listener callback\n      // Note: By defining getValue outside of useEffect we ensure that it has ...\n      // ... current values of hook args (as this hook callback is created once on mount).\n      const handler = () => setValue(getValue);\n      // Set a listener for each media query with above handler as callback.\n      mediaQueryLists.forEach(mql => mql.addListener(handler));\n      // Remove listeners on cleanup\n      return () => mediaQueryLists.forEach(mql => mql.removeListener(handler));\n    },\n    [getValue, mediaQueryLists] // Empty array ensures effect is only run on mount and unmount\n  );\n\n  return value;\n}\n","import React, { FC } from \"react\";\nimport { NerdMan } from \"../../components/nerdman/nerd-man\";\nimport { ComicBox } from \"../../components/comic-box/comic-box\";\nimport { Link } from \"react-router-dom\";\nimport { useMedia, BreakPoints } from \"../../use-media-query\";\n\nexport interface HomeLinkProps {\n  to: string;\n}\nexport const HomeLink: FC<HomeLinkProps> = ({ children, to }) => {\n  return (\n    <div style={{ margin: \"1rem\" }}>\n      <ComicBox className=\"test\" style={{ color: \"black\", margin: \".75rem\" }}>\n        <Link to={to} className=\"comic-font\">\n          {children}\n        </Link>\n      </ComicBox>\n    </div>\n  );\n};\n\nexport const Home = () => {\n  const { LG, MD, SM, XL } = BreakPoints;\n  const iconWidth = useMedia(\n    [SM, MD, LG, XL],\n    [\"70%\", \"50%\", \"50%\", \"50%\"],\n    \"90%\"\n  );\n\n  return (\n    <>\n      <div style={{ width: iconWidth, margin: \"auto auto\" }}>\n        <NerdMan />\n      </div>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <HomeLink to=\"/remote-control\">Remote</HomeLink>\n        <HomeLink to=\"/about\">About</HomeLink>\n      </div>\n    </>\n  );\n};\n","import { ComicBox } from \"../../components/comic-box/comic-box\"\nimport React from \"react\"\n\nexport const About = () => {\n    return (\n        <ComicBox>\n            <h1>Test</h1>\n        </ComicBox>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { App } from './app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import \"./index.css\";\nimport React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { RemoteControl } from \"./routes/remote-control/remote-control-route\";\nimport { Home } from \"./routes/home/home\";\nimport { About } from \"./routes/about/about\";\n\nexport const App = () => {\n  //return <RemoteControl />;\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/remote-control\">\n          <RemoteControl />\n        </Route>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"\">\n          <Home />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n"],"sourceRoot":""}